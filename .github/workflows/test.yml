name: Test

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test_cli:
    runs-on: ubuntu-latest
    name: CLI
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip" # caching pip dependencies

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - run: unzip assets/vanilla_structures.zip -d structures

      - run: python __main__.py
      
  test_regolith_filter:
    runs-on: ubuntu-latest
    name: Regolith Filter
    strategy:
      matrix:
        regolith-version: ['1.5.0']
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v1
        with:
          deno-version: vx.x.x
      - uses: iffy/install-nim@v4.2.0
        with:
          version: stable
      - name: list versions
        shell: bash
        run: |
          python --version
          node -v
          nim -v
          java -version
          deno --version
          dotnet --list-sdks
      - name: Install Regolith
        shell: bash
        run: |
          wget https://github.com/Bedrock-OSS/regolith/releases/download/${{ matrix.regolith-version }}/regolith_${{ matrix.regolith-version }}_linux_amd64.tar.gz
          tar -xzf regolith_${{ matrix.regolith-version }}_linux_amd64.tar.gz
          mv regolith /usr/local/bin
          rm regolith_${{ matrix.regolith-version }}_linux_amd64.tar.gz
          chmod +x /usr/local/bin/regolith
      - name: Install Regolith Filters
        shell: bash
        working-directory: './regolith-test-project'
        run: regolith install-all
      - name: Compiles
        shell: bash
        working-directory: './regolith-test-project'
        run: regolith run default