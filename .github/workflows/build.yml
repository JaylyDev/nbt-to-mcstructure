# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build

on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ${{ matrix.cfg.os }}
    defaults:
      run:
        shell: bash

    strategy:
      matrix:
        cfg:
          - { os: windows-latest, python-version: "3.11", architecture: x64 }
          - { os: windows-latest, python-version: "3.11", architecture: x86 }

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.cfg.python-version }} ${{ matrix.cfg.architecture }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.cfg.python-version }}
          architecture: ${{ matrix.cfg.architecture }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller pillow

      - name: Clone and Build PyInstaller Bootloader
        run: |
          git clone https://github.com/pyinstaller/pyinstaller.git --depth 1
          cd pyinstaller/bootloader
          python ./waf all
          cd ../..
        shell: bash

      - name: Install PyInstaller with Custom Bootloader
        run: pip install ./pyinstaller

      - name: PyInstaller build
        run: python -m PyInstaller -y nbt-to-mcstructure.spec

      - name: Create Release Asset
        run: |
          built_path=nbt-to-mcstructure_v${{ github.event.release.tag_name }}_${{ runner.os }}_${{ matrix.cfg.architecture }}.zip
          echo "BUILT_PATH=$built_path" >> $GITHUB_ENV
          cp ./structures ./dist -r
          cd dist
          if [ "${{ runner.os }}" == "Windows" ]; then
            7z a $built_path .
          elif [ "${{ runner.os }}" == "macOS" ]; then
            zip -r $built_path .
          else
            echo "${{ runner.os }} not supported"
            exit 1
          fi
          cd ..

      - name: Upload Release Asset
        env:
          GH_TOKEN: ${{ github.token }}
        run: gh release upload ${{ github.event.release.tag_name }} ./dist/${{ env.BUILT_PATH }} --clobber

      - name: Create Regolith Tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          build_tag="nbt-to-mcstructure-${{ github.event.release.tag_name }}"
          git tag $build_tag
          git push origin $build_tag
